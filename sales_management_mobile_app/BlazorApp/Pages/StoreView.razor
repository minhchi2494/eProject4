@page "/store"
@attribute [Authorize]
@using BlazorApp.Services
@using BlazorApp.Models
@inject IToastService ToastService
@inject IStoreServices _services;

<EditForm Model="@searchStore" OnSubmit=@SeachForm>
    <div class="row">
        <div class="col-md-6">
            <InputText @bind-Value="searchStore.Name" class="form-control" placeholder="Enter Store Name..."></InputText>
        </div>
        <div class="col-md-2">
            <button type="submit" class="form-control btn btn-primary "><i class="fas fa-search"></i> Search</button>
        </div>
    </div>

    <br />

    @*<div class=row>
            <div class="col-3">
                <a href="/storeCreate" class="btn btn-primary"><i class="fas fa-plus"></i> Create</a>
            </div>
        </div>*@

    <NavLink href="/storeCreate" class="btn btn-sm btn-success mb-2">Create Store</NavLink>

    <br />
</EditForm>

@if (loading)
{
    <table class="table">
        <tr>
            <td colspan="4" class="text-center">
                <span class="spinner-border spinner-border-lg align-center"></span>
            </td>
        </tr>
    </table>
}

<RadzenGrid @ref="storeGrid" AllowPaging="true" PageSize="10" AllowSorting="true" Data="stores" TItem="Store" ColumnWidth="150"
            AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive">
    <Columns>
        <RadzenGridColumn TItem="Store" Property="Id" Title="Id"></RadzenGridColumn>
        <RadzenGridColumn TItem="Store" Property="Name" Title="Name"></RadzenGridColumn>
        <RadzenGridColumn TItem="Store" Property="Email" Title="Email"></RadzenGridColumn>
        <RadzenGridColumn TItem="Store" Property="Phone" Title="Phone"></RadzenGridColumn>
        <RadzenGridColumn TItem="Store" Property="Address" Title="Address"></RadzenGridColumn>

        <RadzenGridColumn TItem="Store" Property="UserId" Title="Salesman">
            <Template Context="data">
                @data.Users.Fullname
            </Template>
        </RadzenGridColumn>

@*        <RadzenGridColumn TItem="Store" Title="Active">
            <Template Context="data">
                <span class="badge badge-success">@data.IsActive</span>
            </Template>
        </RadzenGridColumn>*@
        <RadzenGridColumn TItem="Store" Title="Action">
            <Template Context="data">
                @*<a href="/storeDetail/@data.Id" class="btn btn-outline-info"><i class="far fa-eye"></i></a> &nbsp*@
                <a href="/editStore/@data.Id" class="btn btn-outline-warning"><i class="fas fa-pencil"></i></a>
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>

@*<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Address</th>
            <th>Active</th>
            <th>Detail</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in stores)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Email</td>
                <td>@item.Phone</td>
                <td>@item.Address</td>
                <td>@item.Location.District</td>
                <td>@item.Location.Ward</td>
                <td>
                    <span class="badge badge-success">@item.IsActive</span>
                </td>
                <td>
                    <a href="/storeDetail/@item.Id" class="btn btn-outline-info"><i class="far fa-eye"></i></a>
                </td>
                <td>
                    <a href="/editStore/@item.Id" class="btn btn-outline-warning"><i class="fas fa-pencil"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>*@

@code {
    RadzenGrid<Store> storeGrid;

    private bool loading;

    private List<Store> stores = new List<Store>();

    private Store searchStore = new Store();

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        stores = await _services.getStores(searchStore);
        loading = false;
    }

    private async Task SeachForm(EditContext context)
    {
        ToastService.ShowSuccess("Search successfully!", "Success");
        stores = await _services.getStores(searchStore);
    }
}
