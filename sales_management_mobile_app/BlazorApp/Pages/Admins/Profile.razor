@page "/profile"
@attribute [Authorize]
@inject IAdminServices AdminService

<h1>Hi @AdminService.Admin.Username</h1>

<table class="table">
    <thead>
        <tr>
            <th style="width: 20%">Username</th>
            <th style="width: 20%">FullName</th>
            <th style="width: 20%">Phone</th>
            <th style="width: 20%">Email</th>
            <th style="width: 20%">Actions</th>
        </tr>
    </thead>
    <tbody>
        
          
        <tr>
            <td>@AdminService.Admin.Username</td>
            <td>@AdminService.Admin.Fullname</td>
            <td>@AdminService.Admin.Phone</td>
            <td>@AdminService.Admin.Email</td>

            <td>
                <a href="@($"/admin/edit/{@AdminService.Admin.Id}")" class="btn btn-outline-warning"><i class="fas fa-pencil"></i></a>

            </td>
        </tr>
            

        @if (loading)
        {
            <tr>
                <td colspan="4" class="text-center">
                    <span class="spinner-border spinner-border-lg align-center"></span>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private bool loading;
    @*private Admin admins;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        admins = await AdminService.GetAll();
        loading = false;
    }

    private async void DeleteAdmin(int id)
    {
        var admin = admins.First(x => x.Id == id);
        admin.IsDeleting = true;
        await AdminService.Delete(id);
        admins.Remove(admin);
        StateHasChanged();
    }*@
}