@page "/managerCreate"
@attribute [Authorize]
@using BlazorApp.Models
@using BlazorApp.Services
@inject NavigationManager NavigationManager;
@inject IManagerServices _services;
@inject IToastService ToastService;
@inject IDirectorServices _directorServices;

<h3>Create Manager</h3>

<EditForm Model="@newManager" OnValidSubmit="@SubmitCreate">
    <DataAnnotationsValidator />
    <div class="row material">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Id">Id <span style="color:red">(*)</span> </label>
            <InputText class="form-control" @bind-Value="newManager.Id"></InputText>
            <ValidationMessage For="()=>newManager.Id"></ValidationMessage>
        </div>

        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Username">Username <span style="color:red">(*)</span> </label>
            <InputText class="form-control" @bind-Value="newManager.Username"></InputText>
            <ValidationMessage For="()=>newManager.Username"></ValidationMessage>
        </div>
    </div>

    <div>
        <br>
    </div>

    <div class="row material">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Password">Password <span style="color:red">(*)</span> </label>
            <InputText class="form-control" type="password" @bind-Value="newManager.Password"></InputText>
            <ValidationMessage For="()=>newManager.Password"></ValidationMessage>
        </div>

        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Fullname">Fullname <span style="color:red">(*)</span> </label>
            <InputText class="form-control" @bind-Value="newManager.Fullname"></InputText>
            <ValidationMessage For="()=>newManager.Fullname"></ValidationMessage>
        </div>
    </div>

    <div>
        <br>
    </div>

    <div class="row material">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Email">Email <span style="color:red">(*)</span> </label>
            <InputText class="form-control" @bind-Value="newManager.Email"></InputText>
            <ValidationMessage For="()=>newManager.Email"></ValidationMessage>
        </div>

        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Phone">Phone <span style="color:red">(*)</span> </label>
            <InputText class="form-control" @bind-Value="newManager.Phone"></InputText>
            <ValidationMessage For="()=>newManager.Phone"></ValidationMessage>
        </div>
    </div>

    <div>
        <br />
    </div>

    <div class="row material">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Address">Address </label>
            <InputText class="form-control" @bind-Value="newManager.Address"></InputText>
            <ValidationMessage For="()=>newManager.Address"></ValidationMessage>
        </div>

        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Director Id">Director <span style="color:red">(*)</span> </label>
            <br />
            
            <select @bind="newManager.DirectorId" style="width:682px; height:35px">
                @if (directors != null)
                {
                        <option value=0 style="text-align:center">-- Select Director --</option>
                    @foreach (var dir in directors)
                    {
                        <option value="@dir.Id">@dir.Fullname</option>
                    }
                }
            </select>
            <ValidationMessage For="()=>newManager.DirectorId"></ValidationMessage>
        </div>
    </div>

    <div>
        <br />
    </div>

    <div class="row material">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="KpiValue">Kpi Value </label>
            <InputNumber class="form-control" @bind-Value="newManager.KpiValue"></InputNumber>
            <ValidationMessage For="()=>newManager.KpiValue"></ValidationMessage>
        </div>
    </div>

    <div>
        <br />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
    <a href="/manager" class="btn btn-primary">Cancel</a>
</EditForm>

@code {
    private Manager newManager = new Manager();

    private List<Director> directors = new List<Director>();

    private Director searchDirector = new Director();

    protected override async Task OnInitializedAsync()
    {
        directors = await _directorServices.getDirectors(searchDirector);
    }

    private async Task SubmitCreate(EditContext context)
    {
        var result = await _services.createManager(newManager);
        if (result)
        {
            ToastService.ShowSuccess($"Manager {newManager.Fullname} has been created successfully!", "Success");
            NavigationManager.NavigateTo("/manager");
        }
        else
        {
            ToastService.ShowError("An error has been occured in progress!", "Fail");
        }
    }
}
