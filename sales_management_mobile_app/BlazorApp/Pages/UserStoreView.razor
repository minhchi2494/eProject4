@page "/userStore/{id:int}"
@attribute [Authorize]
@using BlazorApp.Services
@using BlazorApp.Models
@inject IToastService ToastService
@inject IUserStoreServices _services;
@inject IUserServices _userServices;

@if (loading)
{
    <table class="table">
        <tr>
            <td colspan="4" class="text-center">
                <span class="spinner-border spinner-border-lg align-center"></span>
            </td>
        </tr>
    </table>
}

@*<table class="table">
    <thead>
        <tr>
            <th>@manager.Fullname</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in managerUsers)
        {
            <tr>
                <td>Salesman: @item.Salesman</td>
                <td>
                    <a href="/userDetail/@item.SalesmanId" class="btn btn-outline-info"><i class="far fa-eye"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>*@

 <div class="row my-5">
        <div class="col-lg-6 col-xl-4 offset-lg-3 offset-xl-4">
            <RadzenCard class="m-3">
                <h3 class="h5">Manager Information</h3>
                <div class="d-flex flex-row">
                    <RadzenImage Path="/images/manager.jpg" Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;" />
                    <div>
                        <div>Salesman</div>
                        <b>@user.Fullname</b>
                        <div class="mt-3">Company</div>
                        <b>FPT Company</b>
                    </div>
                </div>
            </RadzenCard>
            <RadzenCard class="m-3">
                <h3 class="h5">Salesman Information</h3>
                <div class="row">
                    <div class="col-md-4">
                        <div>Kpi Value</div>
                        <b>@user.KpiValue</b>
                        <div class="mt-3">Store list:
                            <button @onclick="Show" class="form-control btn btn-primary">Show List</button>
                            @*<button @onclick="Hide" class="form-control btn btn-secondary">Show List</button>*@
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div>Actual Kpi</div>
                        <b>@user.ActualKpi</b>
                        <div class="mt-3">
                            <span style="color:#fff">Hide</span>
                            <button @onclick="Hide" class="form-control btn btn-secondary">Hide</button>
                        </div>
                       
                    </div>
                </div>
            </RadzenCard>
        </div>
    </div>

@if(showList)
{
<RadzenGrid style="margin-top: -30px;" @ref="userStoreGrid" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
            AllowFiltering="true" AllowPaging="true" PageSize="5" AllowSorting="true" Data="userStores" TItem="vUserStore" ColumnWidth="200px">
    <Columns>

        <RadzenGridColumn TItem="vUserStore" Property="StoreName" Title="Store Name">
            <FooterTemplate>
                Displayed: <b>@userStoreGrid.View.Count()</b> of <b>@userStores.Count()</b>
            </FooterTemplate>
        </RadzenGridColumn>


@*        <RadzenGridColumn TItem="vUserStore" Title="Action">
            <Template Context="data">
                <a href="/userStore/@data.Id" class="btn btn-outline-info"><i class="far fa-eye"></i></a> &nbsp
                <a href="/editManager/@data.Id" class="btn btn-outline-warning"><i class="fas fa-pencil"></i></a>
            </Template>
        </RadzenGridColumn>*@

    </Columns>
</RadzenGrid>
}


<div><br /></div>
<a href="/account" class="btn btn-primary">Cancel</a>

@code {
    RadzenGrid<vUserStore> userStoreGrid;

    private bool loading, showList;

    private List<vUserStore> userStores = new List<vUserStore>();

    private User user = new User();

    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        showList = false;
        loading = true;
        userStores = await _services.getUserStores(id);
        user = await _userServices.getUser(id);
        loading = false;
    }


    
    private void Show()
    {
        showList = true;
    }

    private void Hide()
    {
        showList = false;
    }
}
