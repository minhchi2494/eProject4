


@page "/targetUserManager"
@attribute [Authorize]
@using BlazorApp.Services
@using BlazorApp.Models
@inject IToastService ToastService
@inject IPerformanceService _services;

<EditForm Model="@ftd" OnSubmit=@SeachForm>
    @*<div class="row">
            <div class="col-md-3">
                <label for="CreatedOn">From Date: </label>
                <InputDate TValue="DateTime?" @bind-Value="ftd.FromDate" class="form-control"></InputDate>
            </div>
            <div class="col-md-3">
                <label for="CreatedOn">To Date: </label>
                <InputDate TValue="DateTime?" @bind-Value="ftd.ToDate" class="form-control"></InputDate>
            </div>
            <div class="col-md-2">
                <button type="submit" class="form-control btn btn-primary "><i class="fas fa-search"></i> Search</button>
            </div>
        </div>*@

    <br />
    <NavLink href="targetCreate" class="btn btn-sm btn-success mb-2">Create Target</NavLink>
    @*<div class=row>
            <div class="col-3">
                <a href="/targetCreate" class="btn btn-primary"><i class="fas fa-plus"></i> Create</a>
            </div>
        </div>

        <br />*@
</EditForm>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Salesman</th>
            <th>Manager</th>
            <th>YTD Quantity</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in tum)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.User.Username</td>
                <td>@item.User.Manager</td>
                <td>@item.YTD</td>

                @*                <td>
                        <a href="/editRole/@item.Id" class="btn btn-outline-warning"><i class="fas fa-pencil"></i></a>
                    </td>*@
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Performance> tum = new List<Performance>();

    private FromToDate ftd = new FromToDate();

    protected override async Task OnInitializedAsync()
    {
        tum = await _services.getAll();
    }

    private async Task SeachForm(EditContext context)
    {
        ToastService.ShowSuccess("Search successfully!", "Success");
        tum = await _services.getAll();
    }
}
