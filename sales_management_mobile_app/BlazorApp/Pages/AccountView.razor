@page "/account"
@attribute [Authorize]
@using BlazorApp.Services
@using BlazorApp.Models
@inject IToastService ToastService;
@inject IUserServices _userServices;
@inject IManagerServices _managerServices;
@inject IDirectorServices _directorServices;

<EditForm Model="@searchManager" OnSubmit=@SeachForm>
    <div class="row">
@*        <div class="col-md-6">
            <InputText @bind-Value="searchManager.Fullname" class="form-control" placeholder="Enter Fullname..."></InputText>
        </div>
        <div class="col-md-2">
            <button type="submit" class="form-control btn btn-primary "><i class="fas fa-search"></i> Search</button>
        </div>*@
    </div>

    <br />

    <NavLink href="/directorCreate" class="btn btn-sm btn-success mb-2">Create Director</NavLink>
    <NavLink href="/managerCreate" class="btn btn-sm btn-success mb-2">Create Manager</NavLink>
    <NavLink href="/userCreate" class="btn btn-sm btn-success mb-2">Create Salesman</NavLink>
</EditForm>

@if (loading)
{
    <table class="table">
        <tr>
            <td colspan="4" class="text-center">
                <span class="spinner-border spinner-border-lg align-center"></span>
            </td>
        </tr>
    </table>
}

<RadzenTabs>
    <Tabs>
        <RadzenTabsItem Text="Director">
            <RadzenGrid @ref="directorGrid" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                        AllowFiltering="true" AllowPaging="true" AllowSorting="true" Data="directors" TItem="Director" ColumnWidth="150px">
                <Columns>
                    <RadzenGridColumn TItem="Director" Property="Id" Title="Id">
                        <FooterTemplate>
                            Displayed: <b>@directorGrid.View.Count()</b> of <b>@directors.Count()</b>
                        </FooterTemplate>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="Director" Property="Username" Title="Username"></RadzenGridColumn>
                    <RadzenGridColumn TItem="Director" Property="Fullname" Title="Fullname"></RadzenGridColumn>
                    <RadzenGridColumn TItem="Director" Property="Email" Title="Email"></RadzenGridColumn>
                    <RadzenGridColumn TItem="Director" Property="Phone" Title="Phone"></RadzenGridColumn>
                    <RadzenGridColumn TItem="Director" Property="Address" Title="Address"></RadzenGridColumn>
                    <RadzenGridColumn TItem="Director" Property="KpiValue" Title="Kpi Value"></RadzenGridColumn>
                    <RadzenGridColumn TItem="Director" Property="ActualKpi" Title="Actual Kpi"></RadzenGridColumn>
                    <RadzenGridColumn TItem="Director" Title="Action">
                        <Template Context="data">
                            <a href="/directorManager/@data.Id" class="btn btn-outline-info"><i class="far fa-eye"></i></a> &nbsp
                            <a href="/editDirector/@data.Id" class="btn btn-outline-warning"><i class="fas fa-pencil"></i></a>
                        </Template>
                    </RadzenGridColumn>
                </Columns>
            </RadzenGrid>
        </RadzenTabsItem>

        <RadzenTabsItem Text="Manager">
            <RadzenGrid @ref="managerGrid" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                        AllowFiltering="true" AllowPaging="true" AllowSorting="true" Data="managers" TItem="Manager" ColumnWidth="160px">
                <Columns>
                    <RadzenGridColumn TItem="Manager" Property="Id" Title="Id">
                        <FooterTemplate>
                            Displayed: <b>@managerGrid.View.Count()</b> of <b>@managers.Count()</b>
                        </FooterTemplate>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="Manager" Property="Username" Title="Username"></RadzenGridColumn>
                    <RadzenGridColumn TItem="Manager" Property="Fullname" Title="Fullname"></RadzenGridColumn>
                    <RadzenGridColumn TItem="Manager" Property="Email" Title="Email"></RadzenGridColumn>
                    <RadzenGridColumn TItem="Manager" Property="Phone" Title="Phone"></RadzenGridColumn>
                    <RadzenGridColumn TItem="Manager" Property="Address" Title="Address"></RadzenGridColumn>
                    <RadzenGridColumn TItem="Manager" Property="DirectorId" Title="Director">
                        <Template Context="data">
                            @data.Director.Fullname
                        </Template>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="Manager" Property="KpiValue" Title="Kpi Value"></RadzenGridColumn>
                    <RadzenGridColumn TItem="Manager" Property="ActualKpi" Title="Actual Kpi"></RadzenGridColumn>

                    <RadzenGridColumn TItem="Manager" Title="Action">
                        <Template Context="data">
                            <a href="/managerUser/@data.Id" class="btn btn-outline-info"><i class="far fa-eye"></i></a> &nbsp
                            <a href="/editManager/@data.Id" class="btn btn-outline-warning"><i class="fas fa-pencil"></i></a>
                        </Template>
                    </RadzenGridColumn>

                </Columns>
            </RadzenGrid>
        </RadzenTabsItem>

        <RadzenTabsItem Text="Salesman">
            <RadzenGrid @ref="userGrid" AllowPaging="true" AllowSorting="true" Data="users" TItem="User" ColumnWidth="150px"
                        AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive">
                <Columns>
                    @*<RadzenGridColumn TItem="User" Property="Id" Title="Id"></RadzenGridColumn>*@
                    <RadzenGridColumn TItem="User" Property="Username" Title="Username"></RadzenGridColumn>
                    <RadzenGridColumn TItem="User" Property="Fullname" Title="Fullname"></RadzenGridColumn>
                    <RadzenGridColumn TItem="User" Property="Email" Title="Email"></RadzenGridColumn>
                    <RadzenGridColumn TItem="User" Property="Phone" Title="Phone"></RadzenGridColumn>
                    <RadzenGridColumn TItem="User" Property="Address" Title="Address"></RadzenGridColumn>
                    <RadzenGridColumn TItem="User" Property="ManagerId" Title="Manager">
                        <Template Context="data">
                            @data.Manager.Fullname
                        </Template>
                    </RadzenGridColumn>
            @*        <RadzenGridColumn TItem="User" Title="Active">
                        <Template Context="data">
                            <span class="badge badge-success">@data.IsActive</span>
                        </Template>
                    </RadzenGridColumn>*@
                    <RadzenGridColumn TItem="User" Property="ActualKpi" Title="Actual Kpi"></RadzenGridColumn>
                    <RadzenGridColumn TItem="User" Property="KpiValue" Title="Kpi Value"></RadzenGridColumn>
                    <RadzenGridColumn TItem="User" Title="Action">
                        <Template Context="data">
                            <a href="/editUser/@data.Id" class="btn btn-outline-warning"><i class="fas fa-pencil"></i></a> &nbsp
                            <a href="/userStore/@data.Id" class="btn btn-outline-info"><i class="fas fa-store"></i></a>
                        </Template>
                    </RadzenGridColumn>
                </Columns>
            </RadzenGrid>
        </RadzenTabsItem>

    </Tabs>

</RadzenTabs>


@code {
    RadzenGrid<Director> directorGrid;
    RadzenGrid<Manager> managerGrid;
    RadzenGrid<User> userGrid;

    private bool loading;

    private List<Director> directors = new List<Director>();

    private List<Manager> managers = new List<Manager>();

    private List<User> users = new List<User>();

    private Director searchDirector = new Director();

    private Manager searchManager = new Manager();

    private User searchUser = new User();

    bool showModal;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        directors = await _directorServices.getDirectors(searchDirector);
        managers = await _managerServices.getManagers(searchManager);
        users = await _userServices.getUsers(searchUser);
        loading = false;
    }

    private async Task SeachForm(EditContext context)
    {
        ToastService.ShowSuccess("Search successfully!", "Success");
        managers = await _managerServices.getManagers(searchManager);
    }

}
