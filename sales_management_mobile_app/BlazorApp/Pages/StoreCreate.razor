@page "/storeCreate"
@attribute [Authorize]
@using BlazorApp.Models
@using BlazorApp.Services
@inject NavigationManager NavigationManager;
@inject IStoreServices _services;
@inject IUserServices _userServices;
@inject IToastService ToastService;

<h3>Create Store</h3>

<EditForm Model="@newStore" OnValidSubmit="@SubmitCreate">
    <DataAnnotationsValidator />
    <div class="row material">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Id">Id <span style="color:red">(*)</span> </label>
            <InputText class="form-control" @bind-Value="newStore.Id"></InputText>
            <ValidationMessage For="()=>newStore.Id"></ValidationMessage>
        </div>

        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Name">Name <span style="color:red">(*)</span> </label>
            <InputText class="form-control" @bind-Value="newStore.Name"></InputText>
            <ValidationMessage For="()=>newStore.Name"></ValidationMessage>
        </div>
    </div>

    <div>
        <br>
    </div>

    <div class="row material">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Email">Email </label>
            <InputText class="form-control" @bind-Value="newStore.Email"></InputText>
            <ValidationMessage For="()=>newStore.Email"></ValidationMessage>
        </div>

        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Phone">Phone <span style="color:red">(*)</span> </label>
            <InputText class="form-control" @bind-Value="newStore.Phone"></InputText>
            <ValidationMessage For="()=>newStore.Phone"></ValidationMessage>
        </div>
    </div>

    <div>
        <br>
    </div>

    <div class="row material">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Address">Address <span style="color:red">(*)</span> </label>
            <InputText class="form-control" @bind-Value="newStore.Address"></InputText>
            <ValidationMessage For="()=>newStore.Address"></ValidationMessage>
        </div>

        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Longitude">Longitude </label>
            <InputNumber class="form-control" @bind-Value="newStore.Longitude"></InputNumber>
            <ValidationMessage For="()=>newStore.Longitude"></ValidationMessage>
        </div>
    </div>

    <div>
        <br>
    </div>

    <div class="row material">
        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="Latitude">Latitude </label>
            <InputNumber class="form-control" @bind-Value="newStore.Latitude"></InputNumber>
            <ValidationMessage For="()=>newStore.Latitude"></ValidationMessage>
        </div>

         <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="UserId">Salesman</label>
            <select @bind="newStore.UserId" style="width:682px; height:35px">
                @if (users != null)
                {
                        <option value=0 style="text-align:center">-- Select Salesman --</option>
                    @foreach (var us in users)
                    {
                        <option value="@us.Id">@us.Fullname</option>
                    }
                }
            </select>
            <ValidationMessage For="()=>newStore.UserId"></ValidationMessage>
        </div>

    </div>

    <div>
        <br>
    </div>

    <div class="row material">
@*        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            <label for="UserId">User Id <span style="color:red">(*)</span> </label>
            <InputNumber class="form-control" @bind-Value="newStore.UserId"></InputNumber>
            <ValidationMessage For="()=>newStore.UserId"></ValidationMessage>
        </div>*@

        <div class="col-xs-6 col-sm-6 col-lg-6 col-md -6">
            @*<label for="IsActive">Active</label>*@
            <input type="checkbox" unchecked @bind="newStore.IsActive" hidden>
            @*<small id="nameHelp" class="form-text text-muted">(Note: check to active your Store)</small>*@
        </div>
    </div>

    <div>
        <br>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
    <a href="/store" class="btn btn-primary">Cancel</a>
</EditForm>


@code {
    private Store newStore = new Store();

    private List<User> users = new List<User>();

    private User searchUser = new User();

    protected override async Task OnInitializedAsync()
    {
        users = await _userServices.getUsers(searchUser);
    }

    private async Task SubmitCreate(EditContext context)
    {
        var result = await _services.createStore(newStore);
        if (result)
        {
            ToastService.ShowSuccess($"{newStore.Name} has been created successfully!", "Success");
            NavigationManager.NavigateTo("/store");
        }
        else
        {
            ToastService.ShowError("An error has been occured in progress!", "Fail");
        }
    }
}
